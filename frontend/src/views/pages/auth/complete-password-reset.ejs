<!DOCTYPE html>
<html lang="en">

<head>
  <%- include("../../components/head.ejs") %>
  <script src="/js/auth.js"></script>
  <title>GradeAnalyzer | Complete Password Reset</title>
</head>

<body class="bg-dark-500 h-screen">
  <main class="flex items-center justify-center h-full px-4">
    <div class="w-full max-w-md bg-dark-400 rounded-lg p-8 shadow-lg">
      <h1 class="text-3xl font-bold text-center text-text-light mb-6">Reset Password</h1>
      <form id="auth-form" class="space-y-6">
        <!-- Password input field -->
        <div class="relative z-0 w-full mb-5 group">
          <input type="password" name="password" id="password" class="block py-2.5 px-0 w-full text-sm text-text-light bg-transparent border-0 border-b-2 border-accent appearance-none focus:outline-none focus:ring-0 focus:border-primary peer" placeholder=" " required />
          <label for="password" class="peer-focus:font-medium absolute text-sm text-text-light duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:text-primary peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
            Password
          </label>
        </div>

        <!-- Confirm Password input field -->
        <div class="relative z-0 w-full mb-5 group">
          <input type="password" name="confirm-password" id="confirm-password" class="block py-2.5 px-0 w-full text-sm text-text-light bg-transparent border-0 border-b-2 border-accent appearance-none focus:outline-none focus:ring-0 focus:border-primary peer" placeholder=" " required />
          <label for="confirm-password" class="peer-focus:font-medium absolute text-sm text-text-light duration-300 transform -translate-y-6 scale-75 top-3 -z-10 origin-[0] peer-focus:text-primary peer-placeholder-shown:scale-100 peer-placeholder-shown:translate-y-0 peer-focus:scale-75 peer-focus:-translate-y-6">
            Confirm Password
          </label>
        </div>

        <!-- Reset Password button -->
        <button id="complete-password-reset" class="w-full py-3 bg-primary text-text-light rounded-lg font-medium text-sm hover:bg-accent focus:ring-4 focus:outline-none focus:ring-accent transition-shadow shadow-md">
          Reset Password
        </button>
      </form>
    </div>
  </main>

  <script>
    // Initialize authentication module
    const auth = new Authentication(app);
    const completePasswordResetButton = document.getElementById("complete-password-reset");

    // Add click event listener to the reset password button
    completePasswordResetButton.addEventListener("click", async (event) => {
      completePasswordResetButton.disabled = true; // Disable button during processing
      event.preventDefault(); // Prevent form submission

      const token = "<%= token %>"; // Get token for password reset
      const password = document.getElementById("password").value; // Get entered password
      const confirmPassword = document.getElementById("confirm-password").value; // Get confirmed password

      // Check if passwords match
      if (password !== confirmPassword) {
        completePasswordResetButton.disabled = false; // Re-enable button if passwords do not match
        app.ui.notification(
          "alert",
          "Passwords do not match",
          "error",
          document.getElementById("auth-form"),
          "reset"
        );
        return;
      }

      // Attempt to complete password reset
      const response = await auth.completePasswordReset(token, password);
      if (response.status === "success") {
        document.getElementById("auth-form").innerHTML = ""; // Clear the form on success
        app.ui.notification(
          "alert",
          response.message,
          "success",
          document.getElementById("auth-form"),
          "reset"
        );
        setTimeout(() => {
          app.location.redirect("/login"); // Redirect to login after a short delay
        }, 2000);
      } else {
        completePasswordResetButton.disabled = false; // Re-enable button on error
        // Handle specific error for invalid password
        if (response.error.code === "INVALID_PASSWORD") {
          app.ui.notification(
            "list",
            [
              "Password must be at least 8 characters long",
              "Password must contain at least one uppercase letter",
              "Password must contain at least one lowercase letter",
              "Password must contain at least one number",
              "Password must contain at least one special character",
            ],
            "error",
            document.getElementById("auth-form"),
            "reset"
          );
          return;
        }
        // General error notification
        app.ui.notification(
          "alert",
          response.message,
          "error",
          document.getElementById("auth-form"),
          "reset"
        );
      }
    });
  </script>
</body>

</html>